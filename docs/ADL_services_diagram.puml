@startuml

interface Repository{
    T save
    T update
    T delete
    T findById
    List<T> findAll
}

class OrderRepository{

}

class ProductRepository{

}

class AddressRepository{

}

class UserRepository{

}


class CartRepository{

}

class UserService{
    +register(User user)
    +updateUser(User user)
    +removeUser(User user)
    +findById(UUID id)
    +findAll()
}

class AddressService{
    +addAddress(Address address)
    +removeAddress(Address address)
    +updateAddress(Address address)
    +findById(UUID id)
    +findAll()
}

class ProductService{
    +addProduct(Product product)
    +removeProduct(Product product)
    +updateProduct(Product product)
    +findById(UUID id)
    +findAll()
}

class OrderService{
    +createOrder(User user, List<Item> items, Address address)
    +updateOrder(Order order)
    +removeOrder(Order order)
    +findById(UUID id)
    +findAll()
}

class CartService{
    +addToCart(Product product)
    +removeFromCart(Product product)
    +getCartItems()
}

class LoginService(){
    +login(User user)
    +logout(User user)
}
OrderRepository --|> Repository
UserRepository --|> Repository
AddressRepository --|> Repository
ProductRepository --|> Repository
CartRepository --|> Repository

AddressService --> AddressRepository
UserService --> UserRepository
ProductService --> ProductRepository
CartService --> CartRepository
OrderService --> OrderRepository



@enduml